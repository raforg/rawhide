#!/bin/sh
#
# rawhide - find files using pretty C expressions
# https://raf.org/rawhide
# https://github.com/raforg/rawhide
# https://codeberg.org/raforg/rawhide
#
# Copyright (C) 1990 Ken Stauffer, 2022-2023 raf <raf@raf.org>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, see <https://www.gnu.org/licenses/>.
#
# 20231013 raf <raf@raf.org>

. tests/.common

label="-x/-X %s/%S prevent shell command injection"

touch $d/"cmdinjtest; cd tests >&- 2>&-; cd .$t >&- 2>&-; echo 'oops! command injection succeeded' > cmdinjtest.out"

label2="-x %s"
count_test
$rh -e f -x 'file %s' $d >/dev/null
rc=$?

if [ -f $d/cmdinjtest.out ]
then
	echo "TEST $t fail ($label - $label2)"
	echo $d/cmdinjtest.out:
	cat $d/cmdinjtest.out
	count_fail
	errors=1
elif [ $rc != 0 ]
then
	echo "TEST $t fail ($label - $label2)"
	count_fail
	errors=1
else
	[ x"$quiet" = x1 ] || echo "TEST $t pass ($label - $label2)"
fi

label2="-x %S"
count_test
$rh -e f -x "file $d/%S" $d >/dev/null
rc=$?

if [ -f $d/cmdinjtest.out ]
then
	echo "TEST $t fail ($label - $label2)"
	echo $d/cmdinjtest.out:
	cat $d/cmdinjtest.out
	count_fail
	errors=1
elif [ $rc != 0 ]
then
	echo "TEST $t fail ($label - $label2)"
	count_fail
	errors=1
else
	[ x"$quiet" = x1 ] || echo "TEST $t pass ($label - $label2)"
fi

label2="-X %s"
count_test
$rh -e f -X "cd $saved_pwd && file %s" $d >/dev/null
rc=$?

if [ -f $d/cmdinjtest.out ]
then
	echo "TEST $t fail ($label - $label2)"
	echo $d/cmdinjtest.out:
	cat $d/cmdinjtest.out
	count_fail
	errors=1
elif [ $rc != 0 ]
then
	echo "TEST $t fail ($label - $label2)"
	count_fail
	errors=1
else
	[ x"$quiet" = x1 ] || echo "TEST $t pass ($label - $label2)"
fi

label2="-X %S"
count_test
$rh -e f -X 'file %S' $d >/dev/null
rc=$?

if [ -f $d/cmdinjtest.out ]
then
	echo "TEST $t fail ($label - $label2)"
	echo $d/cmdinjtest.out:
	cat $d/cmdinjtest.out
	count_fail
	errors=1
elif [ $rc != 0 ]
then
	echo "TEST $t fail ($label - $label2)"
	count_fail
	errors=1
else
	[ x"$quiet" = x1 ] || echo "TEST $t pass ($label - $label2)"
fi

# Extra tricky

# These tests (by St√©phane Chazelas) show how `` is more dangerous
# than $() when interpolation of %s/%S is done by quoting with
# backslashes (which is the method that used to be used by rh).
# When a pathname contains backticks, those backticks were backslashed
# by rh, but those backslashes would be processed within any backticks
# in the shell command, and so the contents of the internal backticks
# would be executed by the shell when parsing the final resulting command.
#
# The first two (commented out) tests show the original behaviour with
# `` when interpolation was done by quoting. The next two show the new
# fixed behaviour where %s/%S are passed as positional arguments to sh -c
# as "$1"/"$2" thus eliminating the problem that it isn't actually possible
# to interpolate by quoting because the context in which the interpolation
# happens affects which method of quoting is needed, and it's impossible to
# know what context(s) will be used without actually parsing the shell
# command (which is not an option). The last two tests show the equivalent
# shell command using $() rather than `` which worked safely with both
# methods of interpolation.

mkdir $d/'`$X`'
touch $d/'`$X`'/f
#test_rawhide "X='echo tricky'             $rh -m1 -e 'd && !empty && \"[ -n \\\"\`$explicit_rh -ref -- %S\`\\\" ]\".sh' $d" ""             "rh: fstatat tricky: No such file or directory\n" 0 "backtick cmd with backticks in %S and arbitrary cmd with space in env (orig unsafe)"
#test_rawhide "X='/sbin/reboot-not-really' $rh -m1 -e 'd && !empty && \"[ -n \\\"\`$explicit_rh -ref -- %S\`\\\" ]\".sh' $d" "$d/\`\$X\`\n" "sh: 1: /sbin/reboot-not-really: not found\n" 0 "backtick cmd with backticks in %S and arbitrary cmd with slash in env (orig unsafe)"
test_rawhide "X='echo tricky'             $rh -m1 -e 'd && !empty && \"[ -n \\\"\`$explicit_rh -ref -- %S\`\\\" ]\".sh' $d" "$d/\`\$X\`\n" "" 0 "backtick cmd with backticks in %S and arbitrary cmd with space in env (safe)"
test_rawhide "X='/sbin/reboot-not-really' $rh -m1 -e 'd && !empty && \"[ -n \\\"\`$explicit_rh -ref -- %S\`\\\" ]\".sh' $d" "$d/\`\$X\`\n" "" 0 "backtick cmd with backticks in %S and arbitrary cmd with slash in env (safe)"
test_rawhide "X='echo tricky'             $rh -m1 -e 'd && !empty && \"[ -n \\\"\$($explicit_rh -ref -- %S)\\\" ]\".sh' $d" "$d/\`\$X\`\n" "" 0 "\$() cmd with backticks in %S and arbitrary cmd with space in env (safe)"
test_rawhide "X='/sbin/reboot-not-really' $rh -m1 -e 'd && !empty && \"[ -n \\\"\$($explicit_rh -ref -- %S)\\\" ]\".sh' $d" "$d/\`\$X\`\n" "" 0 "\$() cmd with backticks in %S and arbitrary cmd with slash in env (safe)"

rm -r $d/*

# Test defusing %s and %S that start with - or +

mkdir $d/normal
mkdir $d/-dash
mkdir $d/+plus

touch $d/normal/normal
touch $d/normal/-dash
touch $d/normal/+plus
touch $d/-dash/normal
touch $d/-dash/-dash
touch $d/-dash/+plus
touch $d/+plus/normal
touch $d/+plus/-dash
touch $d/+plus/+plus

test_rawhide_pre_hook() { test_rh_cd_pre_hook; }
test_rawhide_post_hook() { test_rh_cd_post_hook; test_rh_sort_post_hook; }

test_rawhide "$explicit_rh -x 'echo %s %S'"                       ". .\n./+plus ./+plus\n./+plus/+plus ./+plus\n./+plus/-dash ./-dash\n./+plus/normal normal\n./-dash ./-dash\n./-dash/+plus ./+plus\n./-dash/-dash ./-dash\n./-dash/normal normal\n./normal normal\n./normal/+plus ./+plus\n./normal/-dash ./-dash\n./normal/normal normal\n" "" 0 "defuse %s/%S for -x starting with - or +"
test_rawhide "$explicit_rh -x 'echo %s %S' -- normal"             "normal normal\nnormal/+plus ./+plus\nnormal/-dash ./-dash\nnormal/normal normal\n"                                                                                                                                                                                          "" 0 "defuse %s/%S for -x starting with - or + (normal)"
test_rawhide "$explicit_rh -x 'echo %s %S' -- -dash"              "./-dash ./-dash\n./-dash/+plus ./+plus\n./-dash/-dash ./-dash\n./-dash/normal normal\n"                                                                                                                                                                                     "" 0 "defuse %s/%S for -x starting with - or + (-dash)"
test_rawhide "$explicit_rh -x 'echo %s %S' -- +plus"              "./+plus ./+plus\n./+plus/+plus ./+plus\n./+plus/-dash ./-dash\n./+plus/normal normal\n"                                                                                                                                                                                     "" 0 "defuse %s/%S for -x starting with - or + (+plus)"
test_rawhide "$explicit_rh -X 'echo %s %S'"                       ". .\n./+plus ./+plus\n./+plus/+plus ./+plus\n./+plus/-dash ./-dash\n./+plus/normal normal\n./-dash ./-dash\n./-dash/+plus ./+plus\n./-dash/-dash ./-dash\n./-dash/normal normal\n./normal normal\n./normal/+plus ./+plus\n./normal/-dash ./-dash\n./normal/normal normal\n" "" 0 "defuse %s/%S for -X starting with - or +"
test_rawhide "$explicit_rh -X 'echo %s %S' -- normal"             "normal normal\nnormal/+plus ./+plus\nnormal/-dash ./-dash\nnormal/normal normal\n"                                                                                                                                                                                          "" 0 "defuse %s/%S for -X starting with - or + (normal)"
test_rawhide "$explicit_rh -X 'echo %s %S' -- -dash"              "./-dash ./-dash\n./-dash/+plus ./+plus\n./-dash/-dash ./-dash\n./-dash/normal normal\n"                                                                                                                                                                                     "" 0 "defuse %s/%S for -X starting with - or + (-dash)"
test_rawhide "$explicit_rh -X 'echo %s %S' -- +plus"              "./+plus ./+plus\n./+plus/+plus ./+plus\n./+plus/-dash ./-dash\n./+plus/normal normal\n"                                                                                                                                                                                     "" 0 "defuse %s/%S for -X starting with - or + (+plus)"
test_rawhide "$explicit_rh -e '\"echo %s %S\".sh && 0'"           ". .\n./+plus ./+plus\n./+plus/+plus ./+plus\n./+plus/-dash ./-dash\n./+plus/normal normal\n./-dash ./-dash\n./-dash/+plus ./+plus\n./-dash/-dash ./-dash\n./-dash/normal normal\n./normal normal\n./normal/+plus ./+plus\n./normal/-dash ./-dash\n./normal/normal normal\n" "" 0 "defuse %s/%S for sh starting with - or +"
test_rawhide "$explicit_rh -e '\"echo %s %S\".sh && 0' -- normal" "normal normal\nnormal/+plus ./+plus\nnormal/-dash ./-dash\nnormal/normal normal\n"                                                                                                                                                                                          "" 0 "defuse %s/%S for sh starting with - or + (normal)"
test_rawhide "$explicit_rh -e '\"echo %s %S\".sh && 0' -- -dash"  "./-dash ./-dash\n./-dash/+plus ./+plus\n./-dash/-dash ./-dash\n./-dash/normal normal\n"                                                                                                                                                                                     "" 0 "defuse %s/%S for sh starting with - or + (-dash)"
test_rawhide "$explicit_rh -e '\"echo %s %S\".sh && 0' -- +plus"  "./+plus ./+plus\n./+plus/+plus ./+plus\n./+plus/-dash ./-dash\n./+plus/normal normal\n"                                                                                                                                                                                     "" 0 "defuse %s/%S for sh starting with - or + (+plus)"
test_rawhide "RAWHIDE_USER_SHELL=/bin/sh $explicit_rh -e '\"echo %s %S\".ush && 0'"           ". .\n./+plus ./+plus\n./+plus/+plus ./+plus\n./+plus/-dash ./-dash\n./+plus/normal normal\n./-dash ./-dash\n./-dash/+plus ./+plus\n./-dash/-dash ./-dash\n./-dash/normal normal\n./normal normal\n./normal/+plus ./+plus\n./normal/-dash ./-dash\n./normal/normal normal\n" "" 0 "defuse %s/%S for ush starting with - or +"
test_rawhide "RAWHIDE_USER_SHELL=/bin/sh $explicit_rh -e '\"echo %s %S\".ush && 0' -- normal" "normal normal\nnormal/+plus ./+plus\nnormal/-dash ./-dash\nnormal/normal normal\n"                                                                                                                                                                                                                       "" 0 "defuse %s/%S for ush starting with - or + (normal)"
test_rawhide "RAWHIDE_USER_SHELL=/bin/sh $explicit_rh -e '\"echo %s %S\".ush && 0' -- -dash"  "./-dash ./-dash\n./-dash/+plus ./+plus\n./-dash/-dash ./-dash\n./-dash/normal normal\n"                                                                                                                                                                                                                  "" 0 "defuse %s/%S for ush starting with - or + (-dash)"
test_rawhide "RAWHIDE_USER_SHELL=/bin/sh $explicit_rh -e '\"echo %s %S\".ush && 0' -- +plus"  "./+plus ./+plus\n./+plus/+plus ./+plus\n./+plus/-dash ./-dash\n./+plus/normal normal\n"                                                                                                                                                                                                                  "" 0 "defuse %s/%S for ush starting with - or + (+plus)"

test_rawhide_pre_hook() { true; }
test_rawhide_post_hook() { true; }

rm -r $d/normal $d/-dash $d/+plus

finish

exit $errors

# vi:set ts=4 sw=4:
